// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  surname String
  password String
  role UserRole @default(BUYER)
  avatar String @default("default-avatar.jpg")
  reviews Review []
  transactions Transaction []
}

model Device {
  id Int @id @default(autoincrement())
  title String
  reviews Review []
  imageUrl String
  price Int
  type Type @relation(fields: [typeId], references: [id])
  typeId Int
  brand Brand @relation(fields: [brandId], references: [id])
  brandId Int
  info DeviceInfo []
}


model DeviceInfo {
  id Int @id @default(autoincrement())
  title String
  description String
  device Device @relation(fields: [deviceId], references: [id])
  deviceId Int
}

model Type {
 id Int @id @default(autoincrement())
 name String
 devices Device[]
}

model Brand {
 id Int @id @default(autoincrement())
 name String
 devices Device[]
}

model Transaction {
  id Int @id @default(autoincrement())
  user User[]

}

model Review {
  id Int @id @default(autoincrement())
  rate Int
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId Int
  device Device @relation(fields: [deviceId], references: [id])
  deviceId Int
}

enum UserRole {
  BUYER
  ADMIN
}